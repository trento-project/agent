// Code generated by mockery v2.36.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// HostPinger is an autogenerated mock type for the HostPinger type
type HostPinger struct {
	mock.Mock
}

// Ping provides a mock function with given fields: name, arg
func (_m *HostPinger) Ping(name string, arg ...string) bool {
	_va := make([]interface{}, len(arg))
	for _i := range arg {
		_va[_i] = arg[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, name)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string, ...string) bool); ok {
		r0 = rf(name, arg...)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// NewHostPinger creates a new instance of HostPinger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewHostPinger(t interface {
	mock.TestingT
	Cleanup(func())
}) *HostPinger {
	mock := &HostPinger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
