// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import (
	mountinfo "github.com/moby/sys/mountinfo"
	mock "github.com/stretchr/testify/mock"
)

// MockMountParserInterface is an autogenerated mock type for the MountParserInterface type
type MockMountParserInterface struct {
	mock.Mock
}

type MockMountParserInterface_Expecter struct {
	mock *mock.Mock
}

func (_m *MockMountParserInterface) EXPECT() *MockMountParserInterface_Expecter {
	return &MockMountParserInterface_Expecter{mock: &_m.Mock}
}

// GetMounts provides a mock function with given fields: f
func (_m *MockMountParserInterface) GetMounts(f mountinfo.FilterFunc) ([]*mountinfo.Info, error) {
	ret := _m.Called(f)

	if len(ret) == 0 {
		panic("no return value specified for GetMounts")
	}

	var r0 []*mountinfo.Info
	var r1 error
	if rf, ok := ret.Get(0).(func(mountinfo.FilterFunc) ([]*mountinfo.Info, error)); ok {
		return rf(f)
	}
	if rf, ok := ret.Get(0).(func(mountinfo.FilterFunc) []*mountinfo.Info); ok {
		r0 = rf(f)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*mountinfo.Info)
		}
	}

	if rf, ok := ret.Get(1).(func(mountinfo.FilterFunc) error); ok {
		r1 = rf(f)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockMountParserInterface_GetMounts_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetMounts'
type MockMountParserInterface_GetMounts_Call struct {
	*mock.Call
}

// GetMounts is a helper method to define mock.On call
//   - f mountinfo.FilterFunc
func (_e *MockMountParserInterface_Expecter) GetMounts(f interface{}) *MockMountParserInterface_GetMounts_Call {
	return &MockMountParserInterface_GetMounts_Call{Call: _e.mock.On("GetMounts", f)}
}

func (_c *MockMountParserInterface_GetMounts_Call) Run(run func(f mountinfo.FilterFunc)) *MockMountParserInterface_GetMounts_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(mountinfo.FilterFunc))
	})
	return _c
}

func (_c *MockMountParserInterface_GetMounts_Call) Return(_a0 []*mountinfo.Info, _a1 error) *MockMountParserInterface_GetMounts_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockMountParserInterface_GetMounts_Call) RunAndReturn(run func(mountinfo.FilterFunc) ([]*mountinfo.Info, error)) *MockMountParserInterface_GetMounts_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockMountParserInterface creates a new instance of MockMountParserInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockMountParserInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockMountParserInterface {
	mock := &MockMountParserInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
