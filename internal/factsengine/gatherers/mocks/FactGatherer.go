// Code generated by mockery v2.32.3. DO NOT EDIT.

package mocks

import (
	context "context"

	entities "github.com/trento-project/agent/pkg/factsengine/entities"

	mock "github.com/stretchr/testify/mock"
)

// FactGatherer is an autogenerated mock type for the FactGatherer type
type FactGatherer struct {
	mock.Mock
}

// Gather provides a mock function with given fields: _a0, factsRequests
func (_m *FactGatherer) Gather(_a0 context.Context, factsRequests []entities.FactRequest) ([]entities.Fact, error) {
	ret := _m.Called(_a0, factsRequests)

	var r0 []entities.Fact
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, []entities.FactRequest) ([]entities.Fact, error)); ok {
		return rf(_a0, factsRequests)
	}
	if rf, ok := ret.Get(0).(func(context.Context, []entities.FactRequest) []entities.Fact); ok {
		r0 = rf(_a0, factsRequests)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entities.Fact)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, []entities.FactRequest) error); ok {
		r1 = rf(_a0, factsRequests)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewFactGatherer creates a new instance of FactGatherer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewFactGatherer(t interface {
	mock.TestingT
	Cleanup(func())
}) *FactGatherer {
	mock := &FactGatherer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
