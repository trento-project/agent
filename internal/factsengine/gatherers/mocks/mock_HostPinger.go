// Code generated by mockery v2.53.5. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// MockHostPinger is an autogenerated mock type for the HostPinger type
type MockHostPinger struct {
	mock.Mock
}

type MockHostPinger_Expecter struct {
	mock *mock.Mock
}

func (_m *MockHostPinger) EXPECT() *MockHostPinger_Expecter {
	return &MockHostPinger_Expecter{mock: &_m.Mock}
}

// Ping provides a mock function with given fields: host
func (_m *MockHostPinger) Ping(host string) bool {
	ret := _m.Called(host)

	if len(ret) == 0 {
		panic("no return value specified for Ping")
	}

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(host)
	} else {
		r0 = ret.Get(0).(bool)
	}

	return r0
}

// MockHostPinger_Ping_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Ping'
type MockHostPinger_Ping_Call struct {
	*mock.Call
}

// Ping is a helper method to define mock.On call
//   - host string
func (_e *MockHostPinger_Expecter) Ping(host interface{}) *MockHostPinger_Ping_Call {
	return &MockHostPinger_Ping_Call{Call: _e.mock.On("Ping", host)}
}

func (_c *MockHostPinger_Ping_Call) Run(run func(host string)) *MockHostPinger_Ping_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *MockHostPinger_Ping_Call) Return(_a0 bool) *MockHostPinger_Ping_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *MockHostPinger_Ping_Call) RunAndReturn(run func(string) bool) *MockHostPinger_Ping_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockHostPinger creates a new instance of MockHostPinger. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockHostPinger(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockHostPinger {
	mock := &MockHostPinger{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
